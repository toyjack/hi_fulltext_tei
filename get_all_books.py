# coding: utf-8

import pandas as pd
from tqdm import tqdm
import os
import shutil

# remove files generated by last time
def clean_files():
  target_dir = "./output/text"
  shutil.rmtree(target_dir, ignore_errors=True)
  os.mkdir(target_dir)

def workon(e_id):
  book_df = pd.read_csv("data/TBL_M_"+e_id+"_list.txt",sep="\t",header=None)
  content_df = pd.read_csv("data/TBL_T_"+e_id+"_list.txt", sep="\t",header=None)
  output_path= "output/text/"+e_id+"/"

  os.mkdir(output_path)

  books=book_df[[0,10]]
  books.columns=["id","book_title"]

  book_dict=dict(zip(books["id"],books["book_title"]))

  contents=content_df[[2,0,17,16]]
  contents.columns=["book_id","id","page","content"]
  # book_idがないやつを除去
  contents=contents[~contents["book_id"].isnull()]
  # convert content to string
  contents["content"]=contents["content"].astype("str")
  # マンの為
  contents["book_id"]=contents["book_id"].astype("int")

  book_id_list_in_table=contents["book_id"].unique()

  for book_id in tqdm(book_id_list_in_table):
    book_contents=contents.loc[contents["book_id"]==book_id].sort_values(by="page")
    # book_idをゼロ埋めにしてfor making prefix of filenames
    file_name='%08d' %book_id+"_"+book_dict[book_id]+".txt"
    f = open(output_path+file_name, 'w')
    f.write("\n".join(book_contents.content))
    f.close()
  
clean_files()

# TODO check structure of e09 e10 etc
# FIXME E09 error
# e_ids = ["E08", "E09", "E10", "E11"]
e_ids = ["E08", ]

for e_id in tqdm(e_ids):
  workon(e_id)



